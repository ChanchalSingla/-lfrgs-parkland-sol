info:
    description: "HeadlessRestApi REST API"
    license:
        name: "Apache 2.0"
        url: "http://www.apache.org/licenses/LICENSE-2.0.html"
    title: "HeadlessRestApi"
    version: v1.0
openapi: 3.0.1
components:
    responses:
        NotFound:
            content:
                application/json:
                    schema:
                        $ref: "#/components/schemas/Error"
                application/xml:
                    schema:
                        $ref: "#/components/schemas/Error"
            description:
                The specified resource was not found
        UnauthorizedError:
            content:
                application/json:
                    schema:
                        $ref: "#/components/schemas/Error"
                application/xml:
                    schema:
                        $ref: "#/components/schemas/Error"
            description:
                Authentication information is missing or invalid
    schemas:
        Error:
            properties:
                status:
                    description:
                        HTTP Status Code
                    example: 404
                    readOnly: true
                    type: integer
            required:
                - status
            type: object
        Item:
            properties:
                uuid:
                    type: string
                    example: HAVHDBRAKEF
                source-type:
                    type: string
                    example: integration
                action-name:
                    type: string
                    example: get-All-Items
                itemsArray:
                    type: array
                    items:
                      type: object
                      properties:
                        interId:
                          type: string
                          example: SOL
                        inactive:
                          type: integer
                          format: int32
                          example: 0
                        taxOptions:
                          type: integer
                          format: int32
                          example: 1
                        uOfMSchedule:
                          type: string
                          example: EACH
                        itemType:
                          type: integer
                          format: int32
                          example: 1
                        itemTaxSchId:
                          type: string
                          example: GCT-S
                        itemNumber:
                          type: string
                          example: CHVSUPREM20W50QRTS205EA
                        title:
                          type: string
                          example: CHV SUPREME MO 20W50 1*1 QT
                        category:
                          type: string
                          example: Fuel
                        subCategory:
                          type: string
                          example: Diesel
                        visibility:
                          type: string
                          example: B2C
            type: object
        Inventory:
            properties:
                uuid:
                    type: string
                    example: 0d0db2a4-12c6-4e90-8a84-56605e505156
                source-type:
                    type: string
                    example: integration
                action-name:
                    type: string
                    example: get-All-Inventory
                inventoryArray:
                    type: array
                    items:
                      type: object
                      properties:
                        interId:
                          type: string
                          example: SOL
                        inactive:
                          type: integer
                          format: int32
                          example: 0
                        companyId:
                          type: integer
                          format: int64
                          example: 2
                        qtyBackOrdered:
                          type: integer
                          format: int32
                          example: 0
                        qtyOnOrder:
                          type: integer
                          format: int32
                          example: 100
                        qtyDropShipped:
                          type: integer
                          format: int32
                          example: 0
                        qtyInUse:
                          type: integer
                          format: int32
                          example: 0
                        itemNumber:
                          type: string
                          example: DIEULS100
                        qtyInService:
                          type: integer
                          format: int32
                          example: 0
                        locationCode:
                          type: string
                          example: 9-CORP
                        locationDesc:
                          type: string
                          example: Petrojam (Montego) [78]
                        qtyOnHand:
                          type: integer
                          format: int32
                          example: 400
                        qtyDamaged:
                          type: integer
                          format: int32
                          example: 0
                        qtyReturned:
                          type: integer
                          format: int32
                          example: 0
                        qtyAllocated:
                          type: integer
                          format: int32
                          example: 0
                        qtyCommitted:
                          type: integer
                          format: int32
                          example: 0
                        qtySold:
                          type: integer
                          format: int32
                          example: 0
            type: object
    securitySchemes:
        BasicAuth:
            scheme: basic
            type: http
paths:
    "/item":
        post:
            operationId: createItem
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Item"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/Item"
            responses:
                200:
                    description: Success
                    content:
                        application/json:
                            schema:
                              type: object
                              properties:
                                uuid:
                                  type: string
                                  default: "HAVHDBRAKEF"
                        application/xml:
                            schema:
                              type: object
                              properties:
                                uuid:
                                  type: string
                                  default: "HAVHDBRAKEF"
                204:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Error"
                    description: No Content
                400:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Error"
                    description: Bad Request
                401:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Error"
                    description: Unauthorized Access
                403:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Error"
                    description: Forbidden
                404:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Error"
                    description: The Item inventory based on the location was not found
                408:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Error"
                    description: Socket Timeout
                500:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Error"
                    description: Internal Server Error
                598:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Error"
                    description: Read Timeout
            security:
                - BasicAuth: []
            tags: ["Item"]
    "/inventory":
        post:
            summary: create Inventory
            operationId: createInventory
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Inventory"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/Inventory"
                required: true
            responses:
                200:
                    description: Success
                    content:
                        application/json:
                            schema:
                              type: object
                              properties:
                                uuid:
                                  type: string
                                  default: "0d0db2a4-12c6-4e90-8a84-56605e505156"
                        application/xml:
                            schema:
                              type: object
                              properties:
                                uuid:
                                  type: string
                                  default: "0d0db2a4-12c6-4e90-8a84-56605e505156"
                204:
                  content:
                      application/json:
                          schema:
                              $ref: "#/components/schemas/Error"
                      application/xml:
                          schema:
                              $ref: "#/components/schemas/Error"
                  description: No Content
                400:
                  content:
                      application/json:
                          schema:
                              $ref: "#/components/schemas/Error"
                      application/xml:
                          schema:
                              $ref: "#/components/schemas/Error"
                  description: Bad Request
                403:
                  content:
                      application/json:
                          schema:
                              $ref: "#/components/schemas/Error"
                      application/xml:
                          schema:
                              $ref: "#/components/schemas/Error"
                  description: Forbidden
                408:
                  content:
                      application/json:
                          schema:
                              $ref: "#/components/schemas/Error"
                      application/xml:
                          schema:
                              $ref: "#/components/schemas/Error"
                  description: Socket Timeout
                500:
                  content:
                      application/json:
                          schema:
                              $ref: "#/components/schemas/Error"
                      application/xml:
                          schema:
                              $ref: "#/components/schemas/Error"
                  description: Internal Server Error
                598:
                  content:
                      application/json:
                          schema:
                              $ref: "#/components/schemas/Error"
                      application/xml:
                          schema:
                              $ref: "#/components/schemas/Error"
                  description: Read Timeout
            security:
                - BasicAuth: []
            tags: ["Inventory"]
